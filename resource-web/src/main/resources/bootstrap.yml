server:
  port: 8080

spring:
  application:
    name: resource-web
  
  #Dev config
  devtools:
    restart:
      enabled: true
  thymeleaf:
    cache: false
      
  datasource:
    url: jdbc:mysql://localhost:3306/resource-manager
    username: root
    password: 
    driverClassName: com.mysql.cj.jdbc.Driver
    max-active: 20
    max-idle: 8
    min-idle: 8
    initial-size: 10
  
  jpa:
    database: MySQL
    show-sql: true
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
entitymanager:
  packagesToScan: com.resource.manager, com.employee.resource, com.resource.common
   
  cloud:
    config:
      discovery:
        enabled: false
    fail-fast: false
  resources:
    static-locations: classpath:/META-INF/resources/**,classpath:/resources/**

  session:
    store-type: jdbc
    jdbc:
      initialize-schema: never
    timeout:
      seconds: 900

eureka:
  instance:
    appname: resource-web
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8001/eureka/

#ribbon:
#  serverListRefreshInterval: 1000
#  ConnectTimeout: 6000
#  ReadTimeout: 3000
#  SocketTimeout: 6000

#zuul:
#  ignoredServices: '*'
#  routes:
#    company-service:
#      path: /companies/**
#      serviceId: company-service
#      sensitiveHeaders:

# company-service.ribbon.NFLoadBalancerRuleClassName: com.resource.manager.config.StickySessionRule


# logging level
logging:
  level:
    com.resource.manager: DEBUG
    com.employee.resource: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
  file: app.log
  pattern:
    console:%d{yyyy-MM-dd HH:mm:ss} - %msg%n
    file:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
    